apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.service.name }} # The resource name
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}-{{ .Values.service.name }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Values.service.name }}
    spec:
      # ---------------------------------------------------------------------
      #
      # This block should be used to wait for the migration job to complete,
      # but the error needs to be overcome:
      #
      #   Error from server (Forbidden): jobs.batch "{{ .Release.Name }}-lesson-4-migration-job" is
      #   forbidden: User "system:serviceaccount:{{ .Values.namespace }}:default" cannot get
      #   resource "jobs" in API group "batch" in the namespace "{{ .Values.namespace }}"
      #
      # ---------------------------------------------------------------------
      #
      # initContainers:
      #  - name: wait-db-migration-complete
      #    image: "groundnuty/k8s-wait-for:1.3"
      #    imagePullPolicy: {{ .Values.container.image.pullPolicy }}
      #    args:
      #      - job
      #      - {{ .Release.Name }}-lesson-4-migration-job
      containers:
        - name: {{ .Release.Name }}-{{ .Values.service.name }} # The container name
          image: {{ .Values.container.image.repository}}:{{ .Values.container.image.tag}}
          imagePullPolicy: {{ .Values.container.image.pullPolicy}}
          ports:
            - containerPort: {{ .Values.service.port }}
              protocol: TCP
          readinessProbe: # Check pod init
            httpGet:
              scheme: HTTP
              path: /health
              port: {{ .Values.service.port }}
              httpHeaders:
                - name: Custom-Header
                  value: OTUS
            initialDelaySeconds: 120 # Timeout before first request
            periodSeconds: 60        # Survey frequency
          livenessProbe: # Check pod status
            httpGet:
              scheme: HTTP
              path: /health
              port: {{ .Values.service.port }}
              httpHeaders:
                - name: Custom-Header
                  value: OTUS
            initialDelaySeconds: 120 # Timeout before first request
            periodSeconds: 60        # Survey frequency
          env:
            - name: DATASOURCE_DRIVER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-lesson-4-application-configmap
                  key: datasource.driver
            - name: DATASOURCE_URL
              value: jdbc:mysql://{{ .Release.Name }}-lesson4mariadb/{{ .Values.lesson4mariadb.auth.database }}
            - name: DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-lesson-4-application-configmap
                  key: datasource.user
            - name: DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-lesson4mariadb-secret
                  key: ROOT_PASSWORD
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-lesson-4-application-configmap
                  key: server.port
            - name: HIBERNATE_DIALECT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-lesson-4-application-configmap
                  key: hibernate.dialect
        - name: tcpflow # to debug
          image: appropriate/tcpflow
          imagePullPolicy: {{ .Values.container.image.pullPolicy }}
        - name: mariadb # to debug db connect
          image: mariadb
          imagePullPolicy: {{ .Values.container.image.pullPolicy }}
          command:
            - sleep
            - "1000"
